var tt = TweenMax.to, tf = TweenMax.from, tft = TweenMax.fromTo,td = TweenMax.delayedCall, ts = TweenMax.set, tweenDelay = .5;



init = function(){
	build_timeline_main();
	addListeners();	
	TweenMax.staggerTo(".star", 0, {x:100},0)
}

function build_timeline_main() {	
	
	
	function bg2In() {
		var bg2TL = new TimelineMax();
			bg2TL.fromTo(scrub_bar, 10, {scaleX:.2}, {scaleX:.8, transformOrigin:"28px 100%", ease:Power0.easeNone},"start")		
		return bg2TL;		
		//bg2TL.timeScale( 0.8);
	}	
	function headIn() {
		var headIn = new TimelineMax();
			headIn.add("start")

		return headIn;		
		//bg2TL.timeScale( 0.8);
	}	
	function bg1In() {
		var bg1TL = new TimelineMax({repeat:0});
		
			bg1TL.timeScale(1.5)
		
				.add("start")
				.to("#anim_bg",5, {x:-50, ease:Power0.easeNone},"start")	
				.to("#img_butterfly", 1,{repeat:5, x:-2700, ease:SteppedEase.config(9)}, "start")
				//.add(headIn,"start")
				.fromTo("#img_container", 5, {x:20, y:0, rotation:20, transformOrigin:"50% 70%"},{x:-30, y:10, rotation:-30,  ease:Power1.easeInOut},"start")		
			
		return bg1TL;		
	}	
	
	function random(min, max) {
	  if (max == null) { max = min; min = 0; }
	  return Math.random() * (max - min) + min;
	}
	
	
	function set_dot1(){
	    TweenLite.set("#img_dot_container1", {
			autoAlpha:.15
	    });
  
		wVal = 30;
		delayVal = 0;

	
	    for (i = 0; i < wVal; i++) {
		  	yVal = random(-150,400);
			xVal = random(350, 500)
		  	scaleVal = random(20,50)/200;
			
			dot = document.createElement("div");	
		    dot.className = "dot_class";
		
		    img_dot_container1.appendChild(dot);
		
			dot.style.backgroundImage = "url('img_dot.png')";
			dot.style.backgroundRepeat = "no-repeat";
		
			speedVal = random(50,100) / 10; 
		
	
		    TweenLite.set(dot, {
				y:yVal,
				x:xVal,
				scale:scaleVal,
				force3D:true,
				autoAlpha:1
		    });
			
			xVal1 = random(100, 200) * -1
			xVal2 = random(600, 800) * -1
			
			yVal1 = (random(0, 800) - 400)
			yVal2 = yVal1 *-1
			
			delayVal += .2;
			
			/*
		    TweenMax.staggerTo(".dot_class", speedVal, {
				bezier: {type: "soft", values:[{x:xVal1, y:yVal1},{x:xVal2, y:yVal2}],autoRotate: true}, 
			ease:Power1.easeOut, rotationX:random(15,90)},.1);
			*/
		    TweenMax.to(dot, speedVal, {
				bezier: {type: "soft", values:[{x:xVal1, y:yVal1},{x:xVal2, y:yVal2}],autoRotate: true}, 
			ease:Power1.easeOut, rotationX:random(15,90), delay:delayVal});
		}
	}
	
	
	//Show Ad
	ts("#container_dc", {display:"block"});
	var mainTL = new TimelineMax();
		mainTL.to(bgFade, .25, {autoAlpha:0, ease:Power1.easeInOut, overwrite:"none", onComplete:hideBGFade})
		.add("fr1", "+=0")
		.staggerFromTo("#copy1 .text1", .01, {autoAlpha:0},{autoAlpha:1, ease:"Power3.easeOut"},1.2,"fr1+=.2")	
		
		//.addPause()
		.add("fr1_out", "+=1.5")

		.add(set_dot1,"fr1_out-=.5")
		.add(bg1In,"fr1_out-=.1")
		.add(bg2In,"fr1_out-=.1")
	
		.from("#anim_container", .01, {autoAlpha:0, ease:"Power3.easeOut"},"fr1_out" )
		.to("#copy1", .01, {autoAlpha:0, ease:"Power3.easeOut"},"fr1_out+=.25" )
		
		//.addPause()		
		.add("fr2", "+=2.5")
		.to("#anim_container", .01, {autoAlpha:0, ease:"Power3.easeInOut"},"fr2" )
		.staggerFromTo("#copy2 .text1", .01, {autoAlpha:0},{autoAlpha:1, ease:"Power3.easeOut"},1.25,"fr2+=.3")

		.add("fr3", "+=2")
		
		.to("#copy2", .01, {autoAlpha:0,ease:"Power3.easeOut"},"fr3" )
		.staggerFromTo("#copy3 .text1", .5, {autoAlpha:0, x:-20},{autoAlpha:1, x:0,  ease:"Power3.easeOut"},.07,"fr3+=.3" )
		.staggerFromTo("#copy3 .text2", .5, {autoAlpha:0, x:-20},{autoAlpha:1, x:0, ease:"Power3.easeOut"},.07,"+=.25" )
		.add("ef")
		.call(function(){console.log(mainTL.duration());});
		//mainTL.seek("fr1_out")		
}



hideBGFade = function(){
	bgFade.style.display = "none";
}


//Add Event Listeners
setRoll = function(){
	var x = document.getElementById("background_exit_dc");
	if (x.addEventListener) {                    
		// For all major browsers, except IE 8 and earlier
	    x.addEventListener('mouseover', bgOverHandler, false);
	    x.addEventListener('mouseout', bgOutHandler, false);
	} else {                  
		// For IE 8 and earlier versions hide rollover effect
	}
}
addListeners = function() {
	setRoll();
}


bgOverHandler = function(e) {
	ts(cta, {autoAlpha:.7, overwrite:"true"});			
}

bgOutHandler = function(e) {
	ts(cta, {autoAlpha:1, overwrite:"true"});			
}



function bgExitHandler() {

}


