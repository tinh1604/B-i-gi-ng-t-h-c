define(["comp/graphicComp","comp/compFactory","utils/objectUtils","utils/domUtils","utils/graphicUtils","infra/logger"],function(t,i,e,o,n,a){function p(i){t.call(this,i),this.compList=[],this.playableList=[],this.autoPlayList=[]}p.prototype=new t;var r=function(t){return e.isFunction(t.play)&&e.isFunction(t.pause)},s=function(t){this.compList.push(t),r(t)&&(this.playableList.push(t),t.autoplay&&this.autoPlayList.push(t))},l=function(t){var i=t.id?t.id:"comp-"+e.generateGUID();t.id=i;var a=o.getElementById(i,this.div);return null==a&&(a=n.buildDiv({elementAttributes:{id:i}}),o.insertElementIntoContainer(this.div,a)),a};return p.prototype.build=function(t){var e=this;if(this.prop.items&&this.prop.items.length){var o=this.prop.items.length;this.prop.items.forEach(function(n){var a=l.call(e,n);i.createComp({div:a,prop:n,dataObjects:e.dataObjects,readyCB:function(i){s.call(e,i),0==--o&&t&&t()}})})}else t&&t()},p.prototype.internalDraw=function(){t.prototype.internalDraw.call(this),this.compList.forEach(function(t){t.draw()})},p.prototype.play=function(){this.playableList.forEach(function(t){t.play()})},p.prototype.pause=function(){this.playableList.forEach(function(t){t.pause()})},Object.defineProperty(p.prototype,"autoplay",{get:function(){return this.autoPlayList.length>0}}),p.prototype.getDefaultProperty=function(){return p.defaultProperty},p.prototype.getInputSchema=function(){return p.inputSchema},p.inputSchema=e.create(t.inputSchema,{items:"array"}),p.defaultProperty=null,a.log("composite component loaded"),p});